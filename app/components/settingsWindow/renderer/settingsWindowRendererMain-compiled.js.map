{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./app/components/debugWindow/debugWindow.lsc","webpack:///./app/components/logging/customRollbarTransport.lsc","webpack:///./app/components/logging/logSettingsUpdates.lsc","webpack:///./app/components/logging/logging.lsc","webpack:///./app/components/logging/userDebugLogger.lsc","webpack:///./app/components/runOnStartup.lsc","webpack:///./app/components/settings/devices.lsc","webpack:///./app/components/settings/settings.lsc","webpack:///./app/components/settings/settingsDefaults.lsc","webpack:///./app/components/settings/settingsIPClisteners.lsc","webpack:///./app/components/settings/settingsObservers.lsc","webpack:///./app/components/settingsWindow/renderer/actions/actionsIndex.lsc","webpack:///./app/components/settingsWindow/renderer/actions/addNewDevice.lsc","webpack:///./app/components/settingsWindow/renderer/actions/animateDots.lsc","webpack:///./app/components/settingsWindow/renderer/actions/changeTrayIconColor.lsc","webpack:///./app/components/settingsWindow/renderer/actions/openLink.lsc","webpack:///./app/components/settingsWindow/renderer/actions/removeDevice.lsc","webpack:///./app/components/settingsWindow/renderer/actions/toggleDebugWindow.lsc","webpack:///./app/components/settingsWindow/renderer/actions/toggleTab.lsc","webpack:///./app/components/settingsWindow/renderer/actions/updateSetting.lsc","webpack:///./app/components/settingsWindow/renderer/actions/updateStateOnIpcMessage.lsc","webpack:///./app/components/settingsWindow/renderer/actions/windowButtons.lsc","webpack:///./app/components/settingsWindow/renderer/components/deviceCard.lsc","webpack:///./app/components/settingsWindow/renderer/settingsWindowRendererMain.lsc","webpack:///./app/components/settingsWindow/renderer/views/aboutInfoWindow.lsc","webpack:///./app/components/settingsWindow/renderer/views/aboutTab.lsc","webpack:///./app/components/settingsWindow/renderer/views/header.lsc","webpack:///./app/components/settingsWindow/renderer/views/helpTab.lsc","webpack:///./app/components/settingsWindow/renderer/views/settingsInfoWindow.lsc","webpack:///./app/components/settingsWindow/renderer/views/settingsTab.lsc","webpack:///./app/components/settingsWindow/renderer/views/statusInfoWindow.lsc","webpack:///./app/components/settingsWindow/renderer/views/statusTab.lsc","webpack:///./app/components/settingsWindow/renderer/views/viewsIndex.lsc","webpack:///./app/components/settingsWindow/settingsWindow.lsc","webpack:///./app/components/tray/tray.lsc","webpack:///./app/components/utils.lsc","webpack:///external \"@hyperapp/logger\"","webpack:///external \"auto-launch\"","webpack:///external \"electron\"","webpack:///external \"gawk\"","webpack:///external \"hyperapp\"","webpack:///external \"is-empty\"","webpack:///external \"lowdb\"","webpack:///external \"lowdb/adapters/FileSync\"","webpack:///external \"path\"","webpack:///external \"rollbar\"","webpack:///external \"timeproxy\"","webpack:///external \"typa\"","webpack:///external \"url\"","webpack:///external \"util\"","webpack:///external \"winston\""],"names":["url","format","protocol","slashes","pathname","path","resolve","__dirname","debugWindow","webContents","openDevTools","mode","BrowserWindow","show","loadURL","debugWindowHTMLpath","once","setTimeout","debug","settingsWindow","send","debugMode","close","event","logger","error","accessToken","process","env","rollbarAccessToken","enabled","captureUncaught","captureUnhandledRejections","environment","reportLevel","payload","mainOrRenderer","platform","processVersions","versions","arch","BlueLossVersion","transform","server","Rollbar","rollbarConfig","winston","transports","CustomLogger","options","Object","assign","util","inherits","CustomRollbarTransport","Transport","prototype","log","level","msg","callback","rollbarLogger","newSettingKey","newSettingValue","is","obj","debugMessage","logSettingsUpdateForDebugMode","name","handleExceptions","humanReadableUnhandledException","Logger","exitOnError","add","Console","UserDebugLoggerTransport","userDebugTransportOptions","configure","rollbarTransportOptions","remove","ipcMain","on","addRollbarLogging","removeRollbarLogging","meta","isError","executeJavaScript","consoleMethod","loggerMessage","createObjectStringForLog","catch","noop","cleanedMetaObj","stack","split","JSON","stringify","AutoLaunch","isHidden","firstRun","blueLossAutoLauncher","enable","err","disable","enableRunOnStartup","disableRunOnStartup","deviceToAdd","deviceId","deviceIsInDevicesToSearchFor","devicesToSearchFor","deviceToRemove","filterDevicesToSearchFor","deviceIdToRemove","device","propName","propValue","updateDeviceInDevicesToSearchFor","addNewDeviceToSearchFor","removeNewDeviceToSearchFor","updateLastSeenForDevicesLookingForOnStartup","join","electronApp","getPath","db","settings","FileSync","settingsDBpath","adapter","defaults","defaultSettings","write","getState","set","initSettings","updateSetting","getSettings","blueLossEnabled","runOnStartup","trayIconColor","timeToLock","reportErrors","settingsWindowPosition","settingName","settingValue","initSettingsIPClisteners","gawk","watch","changeTrayIcon","initSettingsObservers","minimizeSettingsWindow","closeSettingsWindow","toggleTab","openLink","animateDots","updateStateOnIpcMessage","changeTrayIconColor","removeDevice","addNewDevice","toggleDebugWindow","newDevice","state","ipcRenderer","element","interval","classList","toggle","animateStatusDots","contains","newTrayIconColor","preventDefault","shell","openExternal","currentTarget","dataset","externalLink","toggled","activeTab","id","newStateObjToMerge","remote","getCurrentWindow","currentWindow","minimize","lookingForDevice","actions","deviceName","withLogger","logInDev","app","getInitialSettingsFromMainProcess","appActions","views","document","body","setting","settingsWindowRendererApp","devicesCanSee","sendSync","messageOrEvent","source","lineNumber","columnNumber","window","onerror","handleRendererWindowError","onunhandledrejection","display","infoWindowDisplay","getVersion","electron","chrome","node","v8","activeTabClass","value","minTimeToLock","newTimeToLock","iconColorIsWhite","isMac","keys","length","visibility","statusAnimationVisibility","blueLossStatusText","lookingForHeaderDisplay","values","map","filter","settingsWindowRendererDirPath","width","height","title","autoHideMenuBar","resizable","fullscreenable","fullscreen","frame","icon","getIconPath","webPreferences","textAreasAreResizable","devTools","ISDEV","getStoredWindowPosition","Menu","buildFromTemplate","role","sender","settingsWindowProperties","settingsHTMLpath","setMenu","settingsWindowMenu","getBounds","dock","hide","x","y","iconsDir","iconFileName","showSettingsWindow","isVisible","toggleSettingsWindow","tray","Tray","getNewTrayIconPath","setContextMenu","createContextMenu","setToolTip","label","click","generateEnabledDisabledLabel","toggleEnabledFromTray","quit","trayIconsFolder","setImage","initTrayMenu","updateTrayMenu","require","version","appVersion","fns","reduceRight","accumulator","current","param","now","tp","FIVE_HUNDRED_WEEKS","getOwnPropertyNames","reduce","newObj","omitInheritedProperties","Date","today","getHours","getMinutes","getSeconds","console","exit","compose","identity","tenYearsFromNow","getProperAppVersion","generateLogTimeStamp","bailOnFatalError"],"mappings":"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","file":"settingsWindowRendererMain-compiled.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./app/components/settingsWindow/renderer/settingsWindowRendererMain.lsc\");\n","import path from 'path'\r\nimport url from 'url'\r\nimport { BrowserWindow, ipcMain } from 'electron'\r\n\r\nimport { logger } from '../logging/logging.lsc'\r\nimport { getSettings } from '../settings/settings.lsc'\r\nimport { settingsWindow } from '../settingsWindow/settingsWindow.lsc'\r\nimport { omitGawkFromSettings } from '../utils.lsc'\r\n\r\ndebugWindowHTMLpath = url.format({\r\n  protocol: 'file',\r\n  slashes: true,\r\n  pathname: path.resolve(__dirname, 'components', 'debugWindow', 'renderer', 'debugWindow.html')\r\n})\r\nlet debugWindow = null\r\n\r\nshowDebugWindow():void ->\r\n  if debugWindow:\r\n    return debugWindow.webContents.openDevTools({ mode: 'undocked'})\r\n\r\n  now debugWindow = new BrowserWindow({ show: false})\r\n  debugWindow.loadURL(debugWindowHTMLpath)\r\n  debugWindow.webContents.openDevTools({ mode: 'undocked'})\r\n\r\n  debugWindow.once('closed', ():void ->\r\n    now debugWindow = null\r\n  )\r\n  /**\r\n   * Without a delay, the console has trouble showing the VM:line to the right of\r\n   * what you just logged, instead it shows (unknown) which kinda looks like we're\r\n   * printing 'Current BlueLoss settings: (unknown)'\r\n   */\r\n  debugWindow.webContents.once('devtools-opened', ():void ->\r\n    setTimeout(() => {\r\n      logger.debug('Current BlueLoss settings:', omitGawkFromSettings(getSettings()))\r\n    }, 500)\r\n  )\r\n  debugWindow.webContents.once('devtools-closed', ():void ->\r\n    settingsWindow?.webContents?.send('mainprocess:setting-updated-in-main', {debugMode: false})\r\n    debugWindow.close()\r\n  )\r\n  debugWindow.webContents.once('crashed', (event):void ->\r\n    logger.error('debugWindow.webContents crashed', event)\r\n  )\r\n  debugWindow.once('unresponsive', (event):void ->\r\n    logger.error('debugWindow unresponsive', event)\r\n  )\r\n\r\nexport {\r\n  debugWindow,\r\n}\r\n","import util from 'util'\r\n\r\nimport winston from 'winston'\r\nimport Rollbar from 'rollbar'\r\n\r\nimport { getProperAppVersion } from '../utils.lsc'\r\n\r\nrollbarConfig = {\r\n  accessToken: process.env.rollbarAccessToken,\r\n  enabled: false,\r\n  captureUncaught: true,\r\n  captureUnhandledRejections: true,\r\n  environment: process.env.NODE_ENV,\r\n  reportLevel: 'error',\r\n  payload: {\r\n      mainOrRenderer: 'main',\r\n      platform: process.platform,\r\n      processVersions: process.versions,\r\n      arch: process.arch,\r\n      BlueLossVersion: getProperAppVersion()\r\n    },\r\n    // Ignore the server stuff cause that includes info about the host pc name.\r\n    transform(payload){\r\n      payload.server = {}\r\n    },\r\n}\r\n\r\nrollbarLogger = new Rollbar(rollbarConfig)\r\n\r\nCustomRollbarTransport = winston.transports.CustomLogger = (options):void ->\r\n  Object.assign(this, options)\r\n\r\nutil.inherits(CustomRollbarTransport, winston.Transport)\r\n\r\nCustomRollbarTransport.prototype.log = (level, msg = '', error, callback):void ->\r\n  // Only log errors.\r\n  if level !== 'error': return\r\n  rollbarLogger.error(msg, error)\r\n  callback(null, true)\r\n\r\n\r\nexport {\r\n  CustomRollbarTransport\r\n  rollbarLogger\r\n}\r\n","import is from 'typa'\r\n\r\nimport { SettingsTypes } from '../types/types.lsc'\r\nimport { getSettings } from '../settings/settings.lsc'\r\nimport { logger } from './logging.lsc'\r\n\r\nlogSettingsUpdateForDebugMode(newSettingKey: string, newSettingValue: SettingsTypes):void ->\r\n  if !ISDEV && !getSettings().debugMode: return\r\n  debugMessage = `Updated Setting: updated '${ newSettingKey }' with:`\r\n  if is.obj(newSettingValue):\r\n    logger.debug(debugMessage, { [newSettingKey]: newSettingValue })\r\n  else:\r\n    logger.debug(`${ debugMessage } ${ newSettingValue }`)\r\n\r\n\r\nexport {\r\n  logSettingsUpdateForDebugMode\r\n}\r\n","\r\nimport { ipcMain } from 'electron'\r\nimport winston from 'winston'\r\n\r\nimport { CustomRollbarTransport, rollbarLogger } from './customRollbarTransport.lsc'\r\nimport { UserDebugLoggerTransport } from './userDebugLogger.lsc'\r\nimport { getSettings } from '../settings/settings.lsc'\r\n\r\nrollbarTransportOptions = {\r\n  name: 'rollbarTransport',\r\n  level: 'error',\r\n  handleExceptions: true,\r\n  humanReadableUnhandledException: true,\r\n}\r\nuserDebugTransportOptions = {\r\n  name: 'userDebugTransport',\r\n  level: 'debug',\r\n  handleExceptions: true,\r\n  humanReadableUnhandledException: true,\r\n}\r\n\r\n// https://github.com/winstonjs/winston/tree/2.4.0\r\nlogger = new winston.Logger({\r\n  level: 'debug',\r\n  exitOnError: false\r\n})\r\n\r\nif ISDEV:\r\n  logger.add(winston.transports.Console, {\r\n    handleExceptions: true,\r\n    humanReadableUnhandledException: true,\r\n    // json: true\r\n  })\r\n// dont send errors to rollbar in dev && only if enabled.\r\nif !ISDEV and getSettings().reportErrors:\r\n  addRollbarLogging()\r\n\r\nlogger.add(UserDebugLoggerTransport, userDebugTransportOptions)\r\n/**\r\n* We also need to enable/disable the rollbar module itself as well,\r\n* as it is set to report uncaught exceptions as well as logging\r\n* caught errors.\r\n*/\r\naddRollbarLogging():void ->\r\n  rollbarLogger.configure({enabled: true})\r\n  logger.add(CustomRollbarTransport, rollbarTransportOptions)\r\n\r\nremoveRollbarLogging():void ->\r\n  rollbarLogger.configure({enabled: false})\r\n  logger.remove('rollbarTransport')\r\n\r\nipcMain.on('settings-renderer:error-sent', (event, error):void ->\r\n  logger.error('settings-renderer:error-sent', error)\r\n)\r\nipcMain.on('bluetooth-scan-window-renderer:error-sent', (event, error):void ->\r\n  logger.error('bluetooth-scan-window-renderer:error-sent', error)\r\n)\r\n\r\n\r\nexport {\r\n  logger,\r\n  addRollbarLogging,\r\n  removeRollbarLogging,\r\n}\r\n","import util from 'util'\r\n\r\nimport winston from 'winston'\r\nimport isEmpty from 'is-empty'\r\n\r\nimport { debugWindow } from '../debugWindow/debugWindow.lsc'\r\nimport { omitInheritedProperties, noop, generateLogTimeStamp } from '../utils.lsc'\r\n\r\n/****\r\n* This is the loggger for when the user checks the \"debug\" checkbox in the options\r\n* window. The log data is sent to the debug window renderer devtools console.\r\n*/\r\nUserDebugLoggerTransport = winston.transports.CustomLogger = (options):void ->\r\n  Object.assign(this, options)\r\n\r\nutil.inherits(UserDebugLoggerTransport, winston.Transport)\r\n\r\nUserDebugLoggerTransport.prototype.log = (level, msg = '', meta = {}, callback):void ->\r\n  isError = level === 'error'\r\n  loggerMessage = if isError: 'Error:' else: msg\r\n  consoleMethod = if isError: 'error' else: 'log'\r\n\r\n  debugWindow?.webContents?.executeJavaScript?(\r\n    `console.${ consoleMethod }(\\`${ generateLogTimeStamp() }  ${ loggerMessage }\\n\\`, ${ createObjectStringForLog(meta) });`\r\n  ).catch(noop)\r\n\r\n  callback(null, true)\r\n\r\ncreateObjectStringForLog(meta:Object):Object ->\r\n  cleanedMetaObj = omitInheritedProperties(meta)\r\n  if isEmpty(cleanedMetaObj): return ''\r\n  if cleanedMetaObj.stack: cleanedMetaObj.stack = cleanedMetaObj.stack.split(/\\r\\n?|\\n/)\r\n  `JSON.stringify(${ JSON.stringify(cleanedMetaObj) }, null, 4)`\r\n\r\n\r\nexport {\r\n  UserDebugLoggerTransport,\r\n}\r\n","import AutoLaunch from 'auto-launch'\r\n\r\nimport { logger } from './logging/logging.lsc'\r\n\r\nblueLossAutoLauncher = new AutoLaunch({\r\n  name: 'BlueLoss',\r\n  isHidden: true\r\n})\r\n\r\nenableRunOnStartup(firstRun):void ->\r\n  if firstRun and ISDEV: return\r\n  blueLossAutoLauncher.enable().catch((err):void ->\r\n    logger.error('enableRunOnStartup error: ', err)\r\n  )\r\n\r\ndisableRunOnStartup():void ->\r\n  blueLossAutoLauncher.disable().catch((err):void ->\r\n    logger.error('disableRunOnStartup error: ', err)\r\n  )\r\n\r\nexport {\r\n  enableRunOnStartup,\r\n  disableRunOnStartup,\r\n}\r\n","import { tenYearsFromNow } from '../utils.lsc'\r\nimport { DeviceType } from '../types/types.lsc'\r\nimport { updateSetting, getSettings } from './settings.lsc'\r\n\r\naddNewDeviceToSearchFor(deviceToAdd: DeviceType):void ->\r\n  { deviceId } = deviceToAdd\r\n  if deviceIsInDevicesToSearchFor(deviceId): return\r\n  updateSetting('devicesToSearchFor',\r\n    {...getSettings().devicesToSearchFor, ...{ [ deviceId ]: deviceToAdd }}\r\n  )\r\n\r\nremoveNewDeviceToSearchFor(deviceToRemove: DeviceType):void ->\r\n  { deviceId } = deviceToRemove\r\n  if !deviceIsInDevicesToSearchFor(deviceId): return\r\n  updateSetting('devicesToSearchFor', filterDevicesToSearchFor(deviceId))\r\n\r\nfilterDevicesToSearchFor(deviceIdToRemove: string):Object ->\r\n  {\r\n    ...for key deviceId, val device in getSettings().devicesToSearchFor:\r\n      if deviceId != deviceIdToRemove: { [ deviceId ]: device }\r\n  }\r\n\r\ndeviceIsInDevicesToSearchFor(deviceId: string):boolean ->\r\n  getSettings().devicesToSearchFor[deviceId]\r\n\r\nupdateDeviceInDevicesToSearchFor(deviceId: string, propName: string, propValue: any):Object ->\r\n  updateSetting('devicesToSearchFor',\r\n    {\r\n      ...getSettings().devicesToSearchFor,\r\n      ...{\r\n        [ deviceId ]: {\r\n          ...getSettings().devicesToSearchFor[deviceId],\r\n          ...{ [ propName ]: propValue }\r\n        }\r\n      }\r\n    }\r\n  )\r\n\r\n/**\r\n * When a user starts up BlueLoss after previously exiting, the\r\n * lastSeen value will be out of date for the devices in\r\n * devicesToSearchFor. This would cause BlueLoss to lock the\r\n * system straight away because the lastSeen value + timeToLock\r\n *  will be less than Date.now(). So to prevent this, we give all\r\n * devices in devicesToSearchFor a lastSeen of 10 years from now.\r\n * (when a device is seen again during a scan, lastSeen is updated.)\r\n */\r\nupdateLastSeenForDevicesLookingForOnStartup():void ->\r\n  for val { deviceId } in getSettings().devicesToSearchFor:\r\n    updateDeviceInDevicesToSearchFor(deviceId, 'lastSeen', tenYearsFromNow())\r\n\r\n\r\nexport {\r\n  addNewDeviceToSearchFor,\r\n  removeNewDeviceToSearchFor,\r\n  updateDeviceInDevicesToSearchFor,\r\n  updateLastSeenForDevicesLookingForOnStartup,\r\n}\r\n","import path from 'path'\r\nimport { app as electronApp } from 'electron'\r\n\r\nimport gawk from 'gawk'\r\nimport low from 'lowdb'\r\nimport FileSync from 'lowdb/adapters/FileSync'\r\n\r\nimport { SettingsTypes } from '../types/types.lsc'\r\nimport { defaultSettings } from './settingsDefaults.lsc'\r\nimport { initSettingsObservers } from './settingsObservers.lsc'\r\nimport { initSettingsIPClisteners } from './settingsIPClisteners.lsc'\r\nimport { updateLastSeenForDevicesLookingForOnStartup } from './devices.lsc'\r\nimport { logSettingsUpdateForDebugMode } from '../logging/logSettingsUpdates.lsc'\r\n\r\nsettingsDBpath = path.join(electronApp.getPath('userData'), 'blueloss-settings.json')\r\n\r\nlet db = null\r\nlet settings = null\r\n\r\ninitSettings():void ->\r\n  adapter = new FileSync(settingsDBpath)\r\n  now db = low(adapter)\r\n  db.defaults(defaultSettings).write()\r\n  now settings = gawk(db.getState())\r\n  initSettingsObservers(settings)\r\n  initSettingsIPClisteners()\r\n  updateLastSeenForDevicesLookingForOnStartup()\r\n\r\ngetSettings() -> settings\r\n\r\nupdateSetting(newSettingKey: string, newSettingValue: SettingsTypes):void ->\r\n  settings[newSettingKey] = newSettingValue\r\n  db.set(newSettingKey, newSettingValue).write()\r\n  logSettingsUpdateForDebugMode(newSettingKey, newSettingValue)\r\n\r\n\r\nexport {\r\n  initSettings,\r\n  updateSetting,\r\n  getSettings,\r\n}\r\n","import { SettingsWindowPositionType } from '../types/types.lsc'\r\n\r\ndefaultSettings: {\r\n  blueLossEnabled: boolean,\r\n  runOnStartup: boolean,\r\n  trayIconColor: string,\r\n  devicesToSearchFor: Object,\r\n  timeToLock: number,\r\n  reportErrors: boolean,\r\n  firstRun: boolean,\r\n  settingsWindowPosition: SettingsWindowPositionType,\r\n  debugMode: boolean,\r\n} = {\r\n  blueLossEnabled: true,\r\n  runOnStartup: true,\r\n  trayIconColor: 'blue',\r\n  devicesToSearchFor: {},\r\n  timeToLock: 3,\r\n  reportErrors: true,\r\n  firstRun: true,\r\n  settingsWindowPosition: {},\r\n  debugMode: false,\r\n}\r\n\r\nexport {\r\n  defaultSettings\r\n}\r\n","import { ipcMain } from 'electron'\r\n\r\nimport { DeviceType, SettingsTypes } from '../types/types.lsc'\r\nimport { updateSetting, addNewDeviceToSearchFor, removeNewDeviceToSearchFor } from './settings.lsc'\r\n\r\ninitSettingsIPClisteners():void ->\r\n  ipcMain.on('renderer:setting-updated-in-ui', (event, settingName: string, settingValue: SettingsTypes):void ->\r\n    updateSetting(settingName, settingValue)\r\n  )\r\n  ipcMain.on('renderer:device-added-in-ui', (event, deviceToAdd: DeviceType):void ->\r\n    addNewDeviceToSearchFor(deviceToAdd)\r\n  )\r\n  ipcMain.on('renderer:device-removed-in-ui', (event, deviceToRemove: DeviceType):void ->\r\n    removeNewDeviceToSearchFor(deviceToRemove)\r\n  )\r\n\r\nexport {\r\n  initSettingsIPClisteners\r\n}\r\n","\r\nimport gawk from 'gawk'\r\n\r\nimport { settingsWindow } from '../settingsWindow/settingsWindow.lsc'\r\nimport { addRollbarLogging, removeRollbarLogging } from '../logging/logging.lsc'\r\nimport { changeTrayIcon, updateTrayMenu } from '../tray/tray.lsc'\r\nimport { enableRunOnStartup, disableRunOnStartup } from '../runOnStartup.lsc'\r\nimport { showDebugWindow, debugWindow } from '../debugWindow/debugWindow.lsc'\r\n\r\ninitSettingsObservers(settings):void ->\r\n  gawk.watch(settings, ['blueLossEnabled'], (enabled: boolean):void ->\r\n    settingsWindow?.webContents?.send('mainprocess:setting-updated-in-main', {blueLossEnabled: enabled})\r\n    updateTrayMenu()\r\n  )\r\n  gawk.watch(settings, ['reportErrors'], (enabled: boolean):void ->\r\n    if enabled: addRollbarLogging()\r\n    else: removeRollbarLogging()\r\n  )\r\n  gawk.watch(settings, ['runOnStartup'], (enabled: boolean):void ->\r\n    if enabled: enableRunOnStartup()\r\n    else: disableRunOnStartup()\r\n  )\r\n  gawk.watch(settings, ['debugMode'], (enabled: boolean):void ->\r\n    if enabled: showDebugWindow()\r\n    else: debugWindow?.close?()\r\n  )\r\n  gawk.watch(settings, ['trayIconColor'], changeTrayIcon)\r\n\r\nexport {\r\n  initSettingsObservers\r\n}\r\n","import { minimizeSettingsWindow, closeSettingsWindow } from './windowButtons.lsc'\r\nimport toggleTab from './toggleTab.lsc'\r\nimport openLink from './openLink.lsc'\r\nimport animateDots from './animateDots.lsc'\r\nimport updateSetting from './updateSetting.lsc'\r\nimport updateStateOnIpcMessage from './updateStateOnIpcMessage.lsc'\r\nimport changeTrayIconColor from './changeTrayIconColor.lsc'\r\nimport removeDevice from './removeDevice.lsc'\r\nimport addNewDevice from './addNewDevice.lsc'\r\nimport toggleDebugWindow from './toggleDebugWindow.lsc'\r\n\r\nexport default {\r\n  minimizeSettingsWindow,\r\n  closeSettingsWindow,\r\n  toggleTab,\r\n  openLink,\r\n  animateDots,\r\n  updateSetting,\r\n  updateStateOnIpcMessage,\r\n  changeTrayIconColor,\r\n  removeDevice,\r\n  addNewDevice,\r\n  toggleDebugWindow,\r\n}\r\n","import { ipcRenderer } from 'electron'\r\n\r\nimport { DeviceType } from '../../../types/types.lsc'\r\n\r\n/**\r\n* HyperApp - if you need to use the state & actions and return data, you need\r\n* to use `(value) => (state, actions) =>`\r\n* https://github.com/hyperapp/hyperapp#actions\r\n*/\r\nexport default addNewDevice(newDevice: DeviceType) -> state ->\r\n  if state.devicesToSearchFor[newDevice.deviceId]: return {}\r\n  ipcRenderer.send('renderer:device-added-in-ui', newDevice)\r\n  ({\r\n    devicesToSearchFor: {\r\n      ...state.devicesToSearchFor,\r\n      ...{\r\n        [ newDevice.deviceId ]: newDevice\r\n      }\r\n    }\r\n  })\r\n","\r\n// HyperApp - this is called from a lifecycle event, so the element is the thing thats passed in.\r\nexport default animateDots(element):void ->\r\n  animateStatusDots(interval=0):void ->\r\n    setTimeout(():void ->\r\n      element.classList.toggle('play')\r\n      animateStatusDots(!element.classList.contains('play')? 285 : 4200)\r\n    , interval)\r\n\r\n  animateStatusDots()\r\n","import { ipcRenderer } from 'electron'\r\n\r\nexport default changeTrayIconColor(newTrayIconColor: string) ->\r\n  ipcRenderer.send('renderer:setting-updated-in-ui', 'trayIconColor', newTrayIconColor)\r\n  ({trayIconColor: newTrayIconColor})\r\n","import { shell } from 'electron'\r\n\r\nexport default openLink(event):void ->\r\n  event.preventDefault()\r\n  shell.openExternal(event.currentTarget.dataset.externalLink)\r\n","import { ipcRenderer } from 'electron'\r\n\r\nimport { DeviceType } from '../../../types/types.lsc'\r\n\r\n/**\r\n* HyperApp - if you need to use the state & actions and return data, you need\r\n* to use `(value) => (state, actions) =>`\r\n* https://github.com/hyperapp/hyperapp#actions\r\n*/\r\nexport default removeDevice(deviceToRemove: DeviceType) -> state ->\r\n  if !state.devicesToSearchFor[deviceToRemove.deviceId]: return {}\r\n  ipcRenderer.send('renderer:device-removed-in-ui', deviceToRemove)\r\n  ({\r\n    devicesToSearchFor: {\r\n    ...for key deviceId, val device in state.devicesToSearchFor:\r\n      if deviceId != deviceToRemove.deviceId: { [ deviceId ]: device }\r\n  }\r\n  })\r\n","import { ipcRenderer } from 'electron'\r\n\r\nexport default toggleDebugWindow(element) ->\r\n  toggled = element.currentTarget.toggled\r\n  ipcRenderer.send('renderer:setting-updated-in-ui', 'debugMode', toggled)\r\n  { debugMode: toggled }\r\n","\r\n// HyperApp - this is called from a lifecycle event, so the element is the thing thats passed in.\r\nexport default toggleTab(event) -> ({activeTab: event.currentTarget.id})\r\n\r\n\r\n","import { ipcRenderer } from 'electron'\r\n\r\nexport default updateSetting({ settingName, settingValue }) ->\r\n  ipcRenderer.send('renderer:setting-updated-in-ui', settingName, settingValue)\r\n  { [settingName]: settingValue }\r\n","\r\nexport default updateStateOnIpcMessage(newStateObjToMerge) -> newStateObjToMerge\r\n","import { remote } from 'electron'\r\n\r\ncurrentWindow = remote.getCurrentWindow()\r\n\r\nminimizeSettingsWindow():void ->\r\n  currentWindow.minimize()\r\n\r\ncloseSettingsWindow():void ->\r\n  currentWindow.close()\r\n\r\nexport {\r\n  minimizeSettingsWindow,\r\n  closeSettingsWindow\r\n}\r\n","import { h } from 'hyperapp'\r\n\r\nexport default deviceCard({lookingForDevice, device, actions}) ->\r\n  { deviceName, deviceId } = device\r\n  <x-card class=\"deviceCard\">\r\n    <x-box>\r\n      <x-box class=\"cardDeviceIcon\">\r\n        <img src={ `assets/icons/devicesIconForCards-${ if lookingForDevice: 'blue' else: 'grey' }.svg` } />\r\n      </x-box>\r\n      <x-box vertical class=\"deviceDetails\">\r\n        <strong class=\"vendorName\">{ deviceName }</strong>\r\n        <p class=\"deviceMacAddress\">{ deviceId }</p>\r\n      </x-box>\r\n      <x-box class=\"addRemoveButton\">\r\n        {\r\n          // if expressions: http://bit.ly/2kNbt9R\r\n          if lookingForDevice:\r\n            <x-button onclick={():void -> actions.removeDevice(device)}>\r\n              <x-box><x-label>Remove</x-label></x-box>\r\n            </x-button>\r\n          else:\r\n            <x-button onclick={():void -> actions.addNewDevice(device) }>\r\n              <x-box><x-label>Add</x-label></x-box>\r\n            </x-button>\r\n        }\r\n      </x-box>\r\n    </x-box>\r\n  </x-card>\r\n\r\n\r\n","import { ipcRenderer } from 'electron'\r\nimport { h, app } from 'hyperapp'  // eslint-disable-line no-unused-vars\r\nimport { withLogger } from '@hyperapp/logger'\r\n\r\nimport appActions from './actions/actionsIndex.lsc'\r\nimport views from './views/viewsIndex.lsc'\r\nimport { DeviceType, SettingsTypes } from '../../types/types.lsc'\r\nimport { omitInheritedProperties, identity } from '../../utils.lsc'\r\n\r\nlogInDev = if ISDEV: withLogger else: identity\r\nsettingsWindowRendererApp = logInDev(app)(getInitialSettingsFromMainProcess(), appActions, views, document.body)\r\n\r\n\r\nipcRenderer.on('mainprocess:setting-updated-in-main', (event, setting: SettingsTypes):void ->\r\n  settingsWindowRendererApp?.updateStateOnIpcMessage?(setting)\r\n)\r\nipcRenderer.on('mainprocess:update-of-bluetooth-devices-can-see', (event, devicesCanSee: Array<DeviceType>):void ->\r\n  settingsWindowRendererApp?.updateStateOnIpcMessage?(devicesCanSee)\r\n)\r\n\r\ngetInitialSettingsFromMainProcess():Object ->\r\n  ({\r\n    ...{\r\n      activeTab: 'statusTab',\r\n      devicesCanSee: [],\r\n      debugMode: false,\r\n    },\r\n    ...ipcRenderer.sendSync('renderer:intitial-settings-request')\r\n  })\r\n\r\n/**\r\n* https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror\r\n* https://stackoverflow.com/a/43911292/2785644\r\n*/\r\nhandleRendererWindowError(messageOrEvent, source, lineNumber, columnNumber, error):void ->\r\n  ipcRenderer.send('settings-renderer:error-sent',\r\n    { messageOrEvent, source, lineNumber, columnNumber, error: omitInheritedProperties(error) }\r\n  )\r\n\r\nwindow.onerror = handleRendererWindowError\r\nwindow.onunhandledrejection = handleRendererWindowError\r\n","import { remote } from 'electron'\r\nimport { h } from 'hyperapp'\r\n\r\nexport default ({ actions, state }) ->\r\n  infoWindowDisplay = if state.activeTab === 'aboutTab': 'flex' else: 'none'\r\n\r\n  <div id=\"aboutTabInfoWindow\" style={ { display: infoWindowDisplay } }>\r\n    <x-box vertical>\r\n      <x-card>\r\n        <header>\r\n          <h3>BlueLoss { remote.app.getVersion() }</h3>\r\n        </header>\r\n        <main id=\"aboutDetails\">\r\n          <p>\r\n            <a id=\"aboutRepoLink\" onclick={ actions.openLink } data-external-link=\"https://github.com/Darkle/BlueLoss\" href=\"https://github.com/Darkle/BlueLoss\">https://github.com/Darkle/BlueLoss</a>\r\n          </p>\r\n          <table>\r\n            <tr>\r\n              <td>electron:</td><td>{ process.versions.electron }</td>\r\n            </tr>\r\n            <tr>\r\n              <td>chrome:</td><td>{ process.versions.chrome }</td>\r\n            </tr>\r\n            <tr>\r\n              <td>node:</td><td>{ process.versions.node }</td>\r\n            </tr>\r\n            <tr>\r\n              <td>v8:</td><td>{ process.versions.v8 }</td>\r\n            </tr>\r\n          </table>\r\n        </main>\r\n      </x-card>\r\n    </x-box>\r\n  </div>\r\n","import { h } from 'hyperapp'\r\n\r\nexport default ({ actions, state }) ->\r\n  activeTabClass = if state.activeTab === 'aboutTab': 'activeTab' else: ''\r\n  <div\r\n    class={ `tab ${ activeTabClass }` }\r\n    id=\"aboutTab\"\r\n    onclick={ actions.toggleTab }\r\n  >\r\n    <div class=\"tabIcon\">\r\n      <svg height=\"24\" viewbox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n        <path d=\"M11 17h2v-6h-2v6zm1-15C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zM11 9h2V7h-2v2z\"></path>\r\n      </svg>\r\n    </div>\r\n    <div class=\"tabText\">About</div>\r\n    <div class=\"tabLip\">\r\n      <div class=\"tabArrow\"></div>\r\n      <div class=\"tabLine\"></div>\r\n    </div>\r\n  </div>\r\n","import { h } from 'hyperapp'\r\n\r\nexport default ({ actions }) ->\r\n  <div id=\"header\">\r\n    <div id=\"logo\">\r\n      <div id=\"headerIcon\">\r\n        <img src=\"assets/icons/BlueLossIcon.svg\" />\r\n      </div>\r\n      <div id=\"headerText\">BlueLoss</div>\r\n    </div>\r\n    <div id=\"headerButtons\">\r\n      <img id=\"windowControlClose\" src=\"assets/icons/closeIcon.svg\" onclick={ actions.closeSettingsWindow } />\r\n      <img id=\"windowControlMinimize\" src=\"assets/icons/minimizeIcon.svg\" onclick={ actions.minimizeSettingsWindow } />\r\n    </div>\r\n  </div>\r\n\r\n\r\n","import { h } from 'hyperapp'\r\n\r\nexport default ({ actions }) ->\r\n  <div class=\"tab\" onclick={ actions.openLink } id=\"helpTab\" data-external-link=\"https://github.com/Darkle/BlueLoss#readme\">\r\n    <div class=\"tabIcon\">\r\n      <svg height=\"24\" viewbox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n        <path d=\"M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z\"></path>\r\n      </svg>\r\n    </div>\r\n    <div class=\"tabText\">Help</div>\r\n    <div class=\"tabLip\">\r\n      <div class=\"tabArrow\"></div>\r\n      <div class=\"tabLine\"></div>\r\n    </div>\r\n  </div>\r\n","import { h } from 'hyperapp'\r\n\r\nimport { defaultSettings } from '../../../settings/settingsDefaults.lsc'\r\n\r\nminTimeToLock = defaultSettings.timeToLock\r\n\r\nexport default ({ actions, state }) ->\r\n  infoWindowDisplay = if state.activeTab === 'settingsTab': 'flex' else: 'none'\r\n  iconColorIsWhite = state.trayIconColor === 'white'\r\n  isMac = process.platform === 'darwin'\r\n\r\n  <div id=\"settingsTabInfoWindow\" style={ { display: infoWindowDisplay } }>\r\n    <x-box id=\"timeToLockSetting\">\r\n      <x-numberinput\r\n        id=\"timeToLock\"\r\n        value={ state.timeToLock }\r\n        suffix=\" mins\"\r\n        min=\"2\"\r\n        onchange={({ currentTarget: { value } }):void ->\r\n          newTimeToLock = if value < minTimeToLock: minTimeToLock else: value\r\n          actions.updateSetting({ settingName: 'timeToLock', settingValue: ( newTimeToLock )})\r\n        }\r\n      >\r\n        <x-stepper></x-stepper>\r\n      </x-numberinput>\r\n      <x-label for=\"timeToLock\" id=\"timeToLockLabel\">\r\n        <x-box vertical>\r\n          <x-label>\r\n            <strong>Time To Lock</strong>\r\n          </x-label>\r\n          <x-label>Once a device has been lost, BlueLoss will wait this many minutes before locking the computer.</x-label>\r\n        </x-box>\r\n      </x-label>\r\n    </x-box>\r\n    <x-box id=\"iconColorDropdownContainer\">\r\n      <select\r\n        class=\"select\"\r\n        id=\"iconColorDropdown\"\r\n        name=\"iconColorDropdown\"\r\n        onchange={(event):void ->\r\n          actions.changeTrayIconColor(event.currentTarget.value)\r\n        }\r\n      >\r\n        <option value=\"white\" selected={ iconColorIsWhite } >White</option>\r\n        <option value=\"blue\" selected={ !iconColorIsWhite } >Blue</option>\r\n      </select>\r\n      <x-label for=\"iconColorDropdown\" id=\"iconColorDropdownLabel\">\r\n        <x-box vertical>\r\n          <x-label>\r\n            <strong>{ if isMac: 'Menu Bar' else: 'Tray' } Icon Color</strong>\r\n          </x-label>\r\n        </x-box>\r\n      </x-label>\r\n    </x-box>\r\n    <x-box>\r\n      <x-checkbox\r\n        id=\"erroReportingCheckbox\"\r\n        toggled={ state.reportErrors }\r\n        onchange={(event):void ->\r\n          actions.updateSetting({ settingName: 'reportErrors', settingValue: event.currentTarget.toggled})\r\n        }\r\n      ></x-checkbox>\r\n      <x-label for=\"erroReportingCheckbox\" id=\"erroReportingCheckboxLabel\">\r\n        <x-box vertical>\r\n          <x-label>\r\n            <strong>Error Reporting</strong>\r\n          </x-label>\r\n          <x-label>Any errors generated by the app will be sent to rollbar.com. This helps development of the app.</x-label>\r\n        </x-box>\r\n      </x-label>\r\n    </x-box>\r\n    <x-box>\r\n      <x-checkbox\r\n        id=\"runOnStartupCheckbox\"\r\n        toggled={ state.runOnStartup }\r\n        onchange={(event):void ->\r\n          actions.updateSetting({ settingName: 'runOnStartup', settingValue: event.currentTarget.toggled})\r\n        }\r\n      ></x-checkbox>\r\n      <x-label for=\"runOnStartupCheckbox\" id=\"runOnStartupCheckboxLabel\">\r\n        <x-box vertical>\r\n          <x-label>\r\n            <strong>Run On System Startup</strong>\r\n          </x-label>\r\n        </x-box>\r\n      </x-label>\r\n    </x-box>\r\n    <x-box>\r\n      <x-switch\r\n        id=\"userDebugSwitch\"\r\n        toggled={ state.debugMode }\r\n        onchange={ actions.toggleDebugWindow }\r\n      ></x-switch>\r\n      <x-label for=\"userDebugSwitch\" id=\"userDebugSwitchLabel\">\r\n        <x-box vertical>\r\n          <strong>User Debugger</strong>\r\n          <span>Enabling this will show a debug window with information that may help you diagnose any issues.</span>\r\n        </x-box>\r\n      </x-label>\r\n    </x-box>\r\n  </div>\r\n\r\n","import { h } from 'hyperapp'\r\n\r\nexport default ({ actions, state }) ->\r\n  activeTabClass = if state.activeTab === 'settingsTab': 'activeTab' else: ''\r\n  <div\r\n    class={ `tab ${ activeTabClass }` }\r\n    id=\"settingsTab\"\r\n    onclick={ actions.toggleTab }\r\n  >\r\n    <div class=\"tabIcon\">\r\n      <svg height=\"24\" viewbox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n        <path d=\"M19.43 12.98c.04-.32.07-.64.07-.98s-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.12-.22-.39-.3-.61-.22l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.23-.09-.49 0-.61.22l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98s.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.12.22.39.3.61.22l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.23.09.49 0 .61-.22l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65zM12 15.5c-1.93 0-3.5-1.57-3.5-3.5s1.57-3.5 3.5-3.5 3.5 1.57 3.5 3.5-1.57 3.5-3.5 3.5z\"></path>\r\n      </svg>\r\n    </div>\r\n    <div class=\"tabText\">Settings</div>\r\n    <div class=\"tabLip\">\r\n      <div class=\"tabArrow\"></div>\r\n      <div class=\"tabLine\"></div>\r\n    </div>\r\n  </div>\r\n","import { h } from 'hyperapp'\r\n\r\nimport DeviceCard from '../components/deviceCard.lsc'\r\n\r\nexport default ({ actions, state }) ->\r\n  infoWindowDisplay = if state.activeTab === 'statusTab': 'flex' else: 'none'\r\n  statusAnimationVisibility = if state.blueLossEnabled: 'visible' else: 'hidden'\r\n  blueLossStatusText = if state.blueLossEnabled: 'Enabled' else: 'Disabled'\r\n  lookingForHeaderDisplay = if Object.keys(state.devicesToSearchFor).length: 'block' else: 'none'\r\n\r\n  <div id=\"statusTabInfoWindow\" style={ { display: infoWindowDisplay } } >\r\n    <div id=\"topStatus\">\r\n      <div id=\"statusAnimation\" style={ { visibility: statusAnimationVisibility } }>\r\n        <ul oncreate={ actions.animateDots }>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n          <li></li>\r\n        </ul>\r\n      </div>\r\n      <x-box id=\"disableButton\">\r\n        <x-switch\r\n          id=\"blueLossEnableswitch\"\r\n          toggled={ state.blueLossEnabled }\r\n          onchange={(event):void ->\r\n            actions.updateSetting({ settingName: 'blueLossEnabled', settingValue: event.currentTarget.toggled})\r\n          }\r\n        ></x-switch>\r\n        <x-label for=\"blueLossEnableswitch\" id=\"blueLossEnableswitch\">BlueLoss { blueLossStatusText }</x-label>\r\n      </x-box>\r\n    </div>\r\n    <div id=\"devicesContainer\">\r\n      <div id=\"lookingForHeader\" style={ { display: lookingForHeaderDisplay } } >\r\n        Currently Looking For:\r\n      </div>\r\n      {\r\n        Object.values(state.devicesToSearchFor).map(device ->\r\n          <DeviceCard\r\n            key={device.deviceId}\r\n            actions={actions}\r\n            lookingForDevice={true}\r\n            device={device}\r\n          />\r\n        )\r\n      }\r\n      <div id=\"deviceAddHeader\">\r\n        Devices To Add:\r\n      </div>\r\n      {\r\n        state.devicesCanSee\r\n          .filter(({deviceId}) -> !state.devicesToSearchFor[deviceId])\r\n          .map(device ->\r\n            <DeviceCard\r\n              key={device.deviceId}\r\n              actions={actions}\r\n              lookingForDevice={false}\r\n              device={device}\r\n            />\r\n          )\r\n      }\r\n    </div>\r\n    <div id=\"devicesContainerBottomLip\"></div>\r\n  </div>\r\n","import { h } from 'hyperapp'\r\n\r\nexport default ({ actions, state }) ->\r\n  activeTabClass = if state.activeTab === 'statusTab': 'activeTab' else: ''\r\n  <div\r\n    class={ `tab ${ activeTabClass }` }\r\n    id=\"statusTab\"\r\n    onclick={ actions.toggleTab }\r\n  >\r\n    <div class=\"tabIcon\">\r\n      <svg style=\"enable-background:new 0 0 20 20;\" version=\"1.1\" viewbox=\"0 0 24 24\" x=\"0px\" xmlns=\"http://www.w3.org/2000/svg\" y=\"0px\">\r\n        <g>\r\n          <path d=\"M7.1,7.7c0.4-0.4,0.4-1-0.1-1.4C5.6,5,5.6,3,7,1.7c0.4-0.4,0.4-1,0.1-1.4c-0.4-0.4-1-0.4-1.4-0.1c-2.2,2.1-2.2,5.5,0,7.5 C6.1,8.2,6.7,8.1,7.1,7.7z\"></path>\r\n          <path d=\"M12.9,7.7c0.4,0.4,1,0.4,1.4,0.1c2.2-2.1,2.2-5.5,0-7.5c-0.4-0.4-1-0.4-1.4,0.1c-0.4,0.4-0.4,1,0.1,1.4 C14.3,3,14.3,5,13,6.3C12.6,6.7,12.5,7.3,12.9,7.7z\"></path>\r\n          <path d=\"M19,13h-8V5.7c0.6-0.3,1-1,1-1.7c0-1.1-0.9-2-2-2C8.9,2,8,2.9,8,4c0,0.7,0.4,1.4,1,1.7V13H1c-0.6,0-1,0.5-1,1v4 c0,0.5,0.4,1,1,1h1v1h3v-1h10v1h3v-1h1c0.5,0,1-0.5,1-1v-4C20,13.5,19.5,13,19,13z M3,17c-0.5,0-1-0.5-1-1c0-0.5,0.5-1,1-1 c0.6,0,1,0.5,1,1C4,16.6,3.5,17,3,17z M7,17c-0.6,0-1-0.5-1-1c0-0.5,0.4-1,1-1c0.5,0,1,0.5,1,1C8,16.6,7.5,17,7,17z M17,17h-7v-2h7 V17z\"></path>\r\n        </g>\r\n      </svg>\r\n    </div>\r\n    <div class=\"tabText\">Status</div>\r\n    <div class=\"tabLip\">\r\n      <div class=\"tabArrow\"></div>\r\n      <div class=\"tabLine\"></div>\r\n    </div>\r\n  </div>\r\n\r\n","import { h } from 'hyperapp'\r\n\r\nimport Header from '../views/header.lsc'\r\nimport AboutTab from '../views/aboutTab.lsc'\r\nimport HelpTab from '../views/helpTab.lsc'\r\nimport SettingsTab from '../views/settingsTab.lsc'\r\nimport StatusTab from '../views/statusTab.lsc'\r\nimport StatusInfoWindow from '../views/statusInfoWindow.lsc'\r\nimport SettingsInfoWindow from '../views/settingsInfoWindow.lsc'\r\nimport AboutInfoWindow from '../views/aboutInfoWindow.lsc'\r\n\r\nexport default (state, actions) ->\r\n  <div>\r\n    <Header actions={actions} />\r\n    <div id=\"mainContainer\">\r\n      <div id=\"sidebar\">\r\n        <div id=\"topTabs\">\r\n          <StatusTab actions={actions} state={state} />\r\n          <hr />\r\n          <SettingsTab actions={actions} state={state} />\r\n          <hr />\r\n        </div>\r\n        <div id=\"bottomTabs\">\r\n          <hr />\r\n          <HelpTab actions={actions} />\r\n          <hr />\r\n          <AboutTab actions={actions} state={state} />\r\n        </div>\r\n      </div>\r\n      <div id=\"rightInfoContainer\">\r\n        <StatusInfoWindow actions={actions} state={state} />\r\n        <SettingsInfoWindow actions={actions} state={state} />\r\n        <AboutInfoWindow actions={actions} state={state} />\r\n      </div>\r\n    </div>\r\n  </div>\r\n","import path from 'path'\r\nimport url from 'url'\r\nimport { app as electronApp, BrowserWindow, Menu, ipcMain } from 'electron'\r\n\r\n// import omit from 'lodash.omit'\r\n\r\nimport { getSettings, updateSetting } from '../settings/settings.lsc'\r\nimport { logger } from '../logging/logging.lsc'\r\n// import { omitInheritedProperties, omitGawkFromSettings } from '../common/utils.lsc'\r\n\r\nsettingsWindowRendererDirPath = path.join(__dirname, 'components', 'settingsWindow', 'renderer')\r\niconsDir = path.join(settingsWindowRendererDirPath, 'assets', 'icons')\r\nsettingsHTMLpath = url.format({\r\n  protocol: 'file',\r\n  slashes: true,\r\n  pathname: path.resolve(settingsWindowRendererDirPath, 'settingsWindow.html')\r\n})\r\nsettingsWindowProperties = {\r\n  ...{\r\n    width: 786,\r\n    height: 616,\r\n    title: 'BlueLoss',\r\n    autoHideMenuBar: true,\r\n    resizable: false,\r\n    fullscreenable: false,\r\n    fullscreen: false,\r\n    frame: false,\r\n    show: false,\r\n    icon: getIconPath(),\r\n    webPreferences: {\r\n      textAreasAreResizable: false,\r\n      devTools: ISDEV,\r\n    }\r\n  },\r\n  ...getStoredWindowPosition()\r\n}\r\n/****\r\n* Remove the menu in alt menu bar in prod, so they dont accidentally exit the app.\r\n* Reload is for dev so we can easily reload the browserwindow with Ctrl+R.\r\n*/\r\nsettingsWindowMenu = if ISDEV: Menu.buildFromTemplate([{role: 'reload'}]) else: null\r\nlet settingsWindow = null\r\n\r\nshowSettingsWindow():void ->\r\n  if settingsWindow: return settingsWindow.show()\r\n\r\n  ipcMain.on('renderer:intitial-settings-request', event ->\r\n    event.sender.send('mainprocess:intitial-settings-sent', getSettings())\r\n  )\r\n\r\n  now settingsWindow = new BrowserWindow({\r\n    ...settingsWindowProperties,\r\n    ...getStoredWindowPosition(),\r\n    ...{ icon: getIconPath() }\r\n  })\r\n  settingsWindow.loadURL(settingsHTMLpath)\r\n  settingsWindow.setMenu(settingsWindowMenu)\r\n  if ISDEV: settingsWindow.webContents.openDevTools({ mode: 'undocked'})\r\n\r\n  settingsWindow.once('close', ():void ->\r\n    updateSetting('settingsWindowPosition', settingsWindow.getBounds())\r\n  )\r\n  settingsWindow.once('ready-to-show', ():void ->\r\n    settingsWindow.show()\r\n  )\r\n  settingsWindow.once('closed', ():void ->\r\n    now settingsWindow = null\r\n    electronApp.dock?.hide()\r\n  )\r\n  settingsWindow.webContents.once('crashed', (event):void ->\r\n    logger.error('settingsWindow.webContents crashed', event)\r\n  )\r\n  settingsWindow.once('unresponsive', (event):void ->\r\n    logger.error('settingsWindow unresponsive', event)\r\n  )\r\n\r\ngetStoredWindowPosition():Object ->\r\n  { x, y } = getSettings().settingsWindowPosition\r\n  { x, y }\r\n\r\ngetIconPath():string ->\r\n  iconFileName = `BlueLoss-${ getSettings().trayIconColor }-512x512.png`\r\n  path.join(iconsDir, iconFileName)\r\n\r\ntoggleSettingsWindow():void ->\r\n  if !settingsWindow:\r\n    showSettingsWindow()\r\n  elif settingsWindow.isVisible():\r\n    settingsWindow.close()\r\n\r\n/**\r\n * Some settings are just used internally and never exposed to the user -\r\n * e.g. firstRun, settingsWindowPosition, etc.\r\n */\r\n// createSettingsWindowInitialSettings():Object ->\r\n//   omit(\r\n//     omitGawkFromSettings(omitInheritedProperties(getSettings())),\r\n//     ['firstRun', 'settingsWindowPosition', 'dateLastCheckedForAppUpdate', 'skipUpdateVersion']\r\n//   )\r\n\r\nexport {\r\n  showSettingsWindow,\r\n  toggleSettingsWindow,\r\n  settingsWindow,\r\n}\r\n","import path from 'path'\r\nimport { Tray, Menu, app as electronApp } from 'electron'\r\n\r\nimport { showSettingsWindow, toggleSettingsWindow } from '../settingsWindow/settingsWindow.lsc'\r\nimport { updateSetting, getSettings } from '../settings/settings.lsc'\r\n\r\nlet tray = null\r\ntrayIconsFolder = path.resolve(__dirname, 'components', 'tray', 'icons')\r\n\r\ninitTrayMenu():void ->\r\n  now tray = new Tray(getNewTrayIconPath(getSettings().trayIconColor))\r\n  tray.setContextMenu(createContextMenu())\r\n  tray.setToolTip('BlueLoss')\r\n  tray.on('double-click', toggleSettingsWindow)\r\n\r\ncreateContextMenu():Object ->\r\n  Menu.buildFromTemplate(\r\n    [\r\n      {\r\n        label: 'Open BlueLoss Settings',\r\n        click: showSettingsWindow\r\n      },\r\n      {\r\n        label: generateEnabledDisabledLabel(),\r\n        click: toggleEnabledFromTray\r\n      },\r\n      {\r\n        label: 'Quit BlueLoss',\r\n        click: electronApp.quit\r\n      }\r\n    ]\r\n  )\r\n\r\ngetNewTrayIconPath(trayIconColor: string):string ->\r\n  path.join(trayIconsFolder, `BlueLoss-${ trayIconColor }-128x128.png`)\r\n\r\ngenerateEnabledDisabledLabel():string ->\r\n  `${ if getSettings().blueLossEnabled: 'Disable' else: 'Enable' } BlueLoss`\r\n\r\nchangeTrayIcon(newTrayIconColor: string):void ->\r\n  tray.setImage(getNewTrayIconPath(newTrayIconColor))\r\n\r\nupdateTrayMenu():void ->\r\n  tray.setContextMenu(createContextMenu())\r\n\r\ntoggleEnabledFromTray():void ->\r\n  updateSetting('blueLossEnabled', !getSettings().blueLossEnabled)\r\n\r\nexport {\r\n  initTrayMenu,\r\n  changeTrayIcon,\r\n  createContextMenu,\r\n  updateTrayMenu,\r\n}\r\n","import tp from 'timeproxy'\r\nimport is from 'typa'\r\n\r\nimport { logger} from './logging/logging.lsc'\r\n\r\n/**\r\n * If you run Electron by pointing it to a js file that's not in the base parent directory with the\r\n * package.json it will report the Electron binary version rather than what's in your package.json.\r\n * https://github.com/electron/electron/issues/7085\r\n */\r\nappVersion = require('../../package.json').version\r\n\r\ngetProperAppVersion():string -> appVersion\r\n// omitGawkFromSettings(settings) -> recursivelyOmitObjProperties(settings, ['__gawk__'])\r\nnoop() -> return\r\ncompose(...fns) -> value -> fns.reduceRight((accumulator, current) => current(accumulator), value)\r\nidentity(param) -> param\r\ntenYearsFromNow():number -> Date.now() + tp.FIVE_HUNDRED_WEEKS\r\n\r\n// recursivelyOmitObjProperties(obj: Object, propertyFiltersArr: Array<string> = []):Object ->\r\n//   Object.keys(obj).reduce((newObj, propName) ->\r\n//     for elem propertyToFilter in propertyFiltersArr:\r\n//       if propertyToFilter === propName: return newObj\r\n//     if is.obj(obj[propName]):\r\n//       return {...newObj, ...{ [propName]: recursivelyOmitObjProperties(obj[propName], propertyFiltersArr) }}\r\n//     {...newObj, ...{ [propName]: obj[propName] }}\r\n//   , {})\r\n\r\nomitInheritedProperties(obj: Object):Object ->\r\n  Object.getOwnPropertyNames(obj).reduce((newObj, propName) ->\r\n    if is.obj(obj[propName]):\r\n      return {...newObj, ...{ [propName]: omitInheritedProperties(obj[propName]) }}\r\n    {...newObj, ...{ [propName]: obj[propName] }}\r\n  , {})\r\n\r\ngenerateLogTimeStamp():String ->\r\n  today = new Date()\r\n  `[${ today.getHours() }:${ today.getMinutes() }:${ today.getSeconds() }]`\r\n\r\nbailOnFatalError(err):void ->\r\n  console.error(err)\r\n  logger?.error?(err)\r\n  process.exit(1)\r\n\r\nexport {\r\n  // omitGawkFromSettings,\r\n  omitInheritedProperties,\r\n  noop,\r\n  compose,\r\n  identity,\r\n  tenYearsFromNow,\r\n  getProperAppVersion,\r\n  // recursivelyOmitObjProperties,\r\n  generateLogTimeStamp,\r\n  bailOnFatalError,\r\n}\r\n","module.exports = require(\"@hyperapp/logger\");","module.exports = require(\"auto-launch\");","module.exports = require(\"electron\");","module.exports = require(\"gawk\");","module.exports = require(\"hyperapp\");","module.exports = require(\"is-empty\");","module.exports = require(\"lowdb\");","module.exports = require(\"lowdb/adapters/FileSync\");","module.exports = require(\"path\");","module.exports = require(\"rollbar\");","module.exports = require(\"timeproxy\");","module.exports = require(\"typa\");","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = require(\"winston\");"],"sourceRoot":""}