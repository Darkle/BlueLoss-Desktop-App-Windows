import { h } from 'hyperapp'

import DeviceCard from '../components/deviceCard.lsc'

export default ({ actions, state }) ->
  infoWindowDisplay = if state.activeTab === 'statusTab': 'flex' else: 'none'
  statusAnimationVisibility = if state.blueLossEnabled: 'visible' else: 'hidden'
  blueLossStatusText = if state.blueLossEnabled: 'Enabled' else: 'Disabled'
  lookingForHeaderDisplay = if Object.keys(state.devicesToSearchFor).length: 'block' else: 'none'

  <div id="statusTabInfoWindow" style={ { display: infoWindowDisplay } } >
    <div id="topStatus">
      <div id="statusAnimation" style={ { visibility: statusAnimationVisibility } }>
        <ul oncreate={ actions.animateDots }>
          <li></li>
          <li></li>
          <li></li>
          <li></li>
          <li></li>
        </ul>
      </div>
      <x-box id="disableButton">
        <x-switch
          id="blueLossEnableswitch"
          toggled={ state.blueLossEnabled }
          onchange={(event):void ->
            actions.updateSetting({ settingName: 'blueLossEnabled', settingValue: event.currentTarget.toggled})
          }
        ></x-switch>
        <x-label for="blueLossEnableswitch" id="blueLossEnableswitch">BlueLoss { blueLossStatusText }</x-label>
      </x-box>
    </div>
    <div id="devicesContainer">
      <div id="lookingForHeader" style={ { display: lookingForHeaderDisplay } } >
        Currently Looking For:
      </div>
      {
        Object.values(state.devicesToSearchFor).map(device ->
          <DeviceCard
            key={device.deviceId}
            actions={actions}
            lookingForDevice={true}
            device={device}
          />
        )
      }
      <div id="deviceAddHeader">
        Devices To Add:
      </div>
      {
        state.devicesCanSee
          .filter(({deviceId}) -> !state.devicesToSearchFor[deviceId])
          .map(device ->
            <DeviceCard
              key={device.deviceId}
              actions={actions}
              lookingForDevice={false}
              device={device}
            />
          )
      }
    </div>
    <div id="devicesContainerBottomLip"></div>
  </div>
