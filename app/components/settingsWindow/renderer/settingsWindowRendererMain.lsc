import { ipcRenderer } from 'electron'
import { h, app } from 'hyperapp'  // eslint-disable-line no-unused-vars

import appActions from './actions/actionsIndex.lsc'
import views from './views/viewsIndex.lsc'
import { DeviceType, SettingsTypes } from '../../types/types.lsc'
import { omitInheritedProperties, logInDev } from './frontEndUtils.lsc'

settingsWindowRendererApp = logInDev()(app)(
  {
    activeTab: 'statusTab',
    devicesCanSee: [],
    ...ipcRenderer.sendSync('renderer:intitial-settings-request')
  },
  appActions,
  views,
  document.body
)

ipcRenderer.on('mainprocess:setting-updated-in-main', (event, setting: SettingsTypes):void ->
  settingsWindowRendererApp?.updateStateOnIpcMessage?(setting)
)
ipcRenderer.on('mainprocess:update-of-bluetooth-devices-can-see', (event, devicesCanSee: Array<DeviceType>):void ->
  settingsWindowRendererApp?.updateStateOnIpcMessage?(devicesCanSee)
)
ipcRenderer.on('mainprocess:blueloss-enabled-disabled', (event, enabled: Boolean):void ->
  settingsWindowRendererApp?.updateStateOnIpcMessage?({blueLossEnabled: enabled})
)

/**
* https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror
* https://stackoverflow.com/a/43911292/2785644
*/
handleRendererWindowError(messageOrEvent, source, lineNumber, columnNumber, error):void ->
  ipcRenderer.send('settings-renderer:error-sent',
    { messageOrEvent, source, lineNumber, columnNumber, error: omitInheritedProperties(error) }
  )

window.onerror = handleRendererWindowError
window.onunhandledrejection = handleRendererWindowError
