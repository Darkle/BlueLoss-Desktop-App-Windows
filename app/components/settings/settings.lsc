import path from 'path'
import { app as electronApp } from 'electron'

import gawk from 'gawk'
import low from 'lowdb'
import FileSync from 'lowdb/adapters/FileSync'

import { SettingsTypes } from '../types/types.lsc'
import { defaultSettings } from './settingsDefaults.lsc'
import { initSettingsObservers } from './settingsObservers.lsc'
import { initSettingsIPClisteners } from './settingsIPClisteners.lsc'
import { updateLastSeenForDevicesLookingForOnStartup } from './devices.lsc'
import { logSettingsUpdateForDebugMode } from '../logging/logSettingsUpdates.lsc'

settingsDBpath = path.join(electronApp.getPath('userData'), 'blueloss-settings.json')

let db = null
let settings = null

initSettings():void ->
  adapter = new FileSync(settingsDBpath)
  now db = low(adapter)
  db.defaults(defaultSettings).write()
  now settings = gawk(db.getState())
  initSettingsObservers(settings)
  initSettingsIPClisteners()
  updateLastSeenForDevicesLookingForOnStartup()

getSettings() -> settings

updateSetting(newSettingKey: string, newSettingValue: SettingsTypes):void ->
  settings[newSettingKey] = newSettingValue
  db.set(newSettingKey, newSettingValue).write()
  logSettingsUpdateForDebugMode(newSettingKey, newSettingValue)


export {
  initSettings,
  updateSetting,
  getSettings,
}
