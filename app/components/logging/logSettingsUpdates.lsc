import is from 'typa'

import { SettingsTypes } from '../types/types.lsc'
import { getSettings } from '../settings/settings.lsc'
import { logger } from './logging.lsc'

logSettingsUpdateForDebugMode(newSettingKey: string, newSettingValue: SettingsTypes):void ->
  /*****
  * Check if the logger is instantiated first as logSettingsUpdateForDebugMode gets
  * called early on startup.
  */
  if !getSettings().debugMode || !logger?.debug: return
  debugMessage = `Updated Setting: updated '${ newSettingKey }' with:`
  if is.obj(newSettingValue):
    logger.debug(debugMessage, { [newSettingKey]: newSettingValue })
  else:
    logger.debug(`${ debugMessage } ${ newSettingValue }`)


export {
  logSettingsUpdateForDebugMode
}
