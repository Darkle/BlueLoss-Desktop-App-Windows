import util from 'util'

import winston from 'winston'
import Rollbar from 'rollbar'

import { getProperAppVersion } from '../utils.lsc'

rollbarConfig = {
  accessToken: process.env.rollbarAccessToken,
  enabled: false,
  captureUncaught: true,
  captureUnhandledRejections: true,
  environment: process.env.NODE_ENV,
  reportLevel: 'error',
  payload: {
      mainOrRenderer: 'main',
      platform: process.platform,
      processVersions: process.versions,
      arch: process.arch,
      BlueLossVersion: getProperAppVersion()
    },
    // Ignore the server stuff cause that includes info about the host pc name.
    transform(payload){
      payload.server = {}
    },
}

rollbarLogger = new Rollbar(rollbarConfig)

CustomRollbarTransport = winston.transports.CustomLogger = (options):void ->
  Object.assign(this, options)

util.inherits(CustomRollbarTransport, winston.Transport)

CustomRollbarTransport.prototype.log = (level, msg = '', error, callback):void ->
  // Only log errors.
  if level !== 'error': return
  rollbarLogger.error(msg, error)
  callback(null, true)


export {
  CustomRollbarTransport
  rollbarLogger
}
